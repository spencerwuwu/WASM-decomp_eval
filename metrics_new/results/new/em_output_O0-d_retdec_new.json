
{
  "PL_2mm.c": {
    "Lines of code": {
      "kernel_2mm": 251
    },
    "Halstead complexity difficulty measure": {
      "kernel_2mm": 101.7
    },
    "McCabe cyclomatic complexity": {
      "kernel_2mm": 28
    },
    "Maximum nesting depth": {
      "kernel_2mm": 5
    },
    "# goto": {
      "kernel_2mm": 0
    },
    "# cast": {
      "kernel_2mm": 0
    },
    "# var": {
      "kernel_2mm": 33
    },
    "# dead code": {
      "program": 0,
      "kernel_2mm": 0
    }
  },
  "PL_3mm.c": {
    "Lines of code": {
      "kernel_3mm": 445
    },
    "Halstead complexity difficulty measure": {
      "kernel_3mm": 120.5
    },
    "McCabe cyclomatic complexity": {
      "kernel_3mm": 43
    },
    "Maximum nesting depth": {
      "kernel_3mm": 6
    },
    "# goto": {
      "kernel_3mm": 0
    },
    "# cast": {
      "kernel_3mm": 0
    },
    "# var": {
      "kernel_3mm": 56
    },
    "# dead code": {
      "program": 0,
      "kernel_3mm": 0
    }
  },
  "adi.c": {
    "Lines of code": {
      "kernel_adi": 216
    },
    "Halstead complexity difficulty measure": {
      "kernel_adi": 54.3
    },
    "McCabe cyclomatic complexity": {
      "kernel_adi": 14
    },
    "Maximum nesting depth": {
      "kernel_adi": 5
    },
    "# goto": {
      "kernel_adi": 12
    },
    "# cast": {
      "kernel_adi": 0
    },
    "# var": {
      "kernel_adi": 106
    },
    "# dead code": {
      "program": 0,
      "kernel_adi": 0
    }
  },
  "adpcm.c": {
    "Lines of code": {
      "_abs": 3,
      "encode": 113,
      "filtez": 13,
      "filtep": 3,
      "quantl": 27,
      "logscl": 6,
      "scalel": 4,
      "upzero": 39,
      "uppol2": 9,
      "uppol1": 8,
      "logsch": 6,
      "decode": 166
    },
    "Halstead complexity difficulty measure": {
      "_abs": 6.0,
      "encode": 30.5,
      "filtez": 16.1,
      "filtep": 10.5,
      "quantl": 19.4,
      "logscl": 13.0,
      "scalel": 9.6,
      "upzero": 33.9,
      "uppol2": 17.8,
      "uppol1": 16.5,
      "logsch": 14.1,
      "decode": 27.9
    },
    "McCabe cyclomatic complexity": {
      "_abs": 1,
      "encode": 4,
      "filtez": 2,
      "filtep": 1,
      "quantl": 4,
      "logscl": 1,
      "scalel": 1,
      "upzero": 4,
      "uppol2": 1,
      "uppol1": 1,
      "logsch": 1,
      "decode": 3
    },
    "Maximum nesting depth": {
      "_abs": 0,
      "encode": 0,
      "filtez": 1,
      "filtep": 0,
      "quantl": 2,
      "logscl": 0,
      "scalel": 0,
      "upzero": 2,
      "uppol2": 0,
      "uppol1": 0,
      "logsch": 0,
      "decode": 1
    },
    "# goto": {
      "_abs": 0,
      "encode": 0,
      "filtez": 0,
      "filtep": 0,
      "quantl": 2,
      "logscl": 0,
      "scalel": 0,
      "upzero": 0,
      "uppol2": 0,
      "uppol1": 0,
      "logsch": 0,
      "decode": 0
    },
    "# cast": {
      "_abs": 0,
      "encode": 0,
      "filtez": 0,
      "filtep": 0,
      "quantl": 0,
      "logscl": 0,
      "scalel": 0,
      "upzero": 0,
      "uppol2": 0,
      "uppol1": 0,
      "logsch": 0,
      "decode": 0
    },
    "# var": {
      "_abs": 0,
      "encode": 63,
      "filtez": 6,
      "filtep": 0,
      "quantl": 7,
      "logscl": 3,
      "scalel": 1,
      "upzero": 14,
      "uppol2": 6,
      "uppol1": 5,
      "logsch": 3,
      "decode": 95
    },
    "# dead code": {
      "program": 0,
      "_abs": 0,
      "encode": 0,
      "filtez": 0,
      "filtep": 0,
      "quantl": 0,
      "logscl": 0,
      "scalel": 0,
      "upzero": 0,
      "uppol2": 0,
      "uppol1": 0,
      "logsch": 0,
      "decode": 0
    }
  },
  "aes.c": {
    "Lines of code": {
      "encrypt": 56,
      "KeySchedule": 158,
      "AddRoundKey": 66,
      "ByteSub_ShiftRow": 375,
      "MixColumn_AddRoundKey": 149,
      "SubByte": 6,
      "decrypt": 57,
      "InversShiftRow_ByteSub": 375,
      "AddRoundKey_InversMixColumn": 222,
      "aes_main": 37
    },
    "Halstead complexity difficulty measure": {
      "encrypt": 14.7,
      "KeySchedule": 58.3,
      "AddRoundKey": 31.4,
      "ByteSub_ShiftRow": 21.7,
      "MixColumn_AddRoundKey": 63.0,
      "SubByte": 11.0,
      "decrypt": 14.7,
      "InversShiftRow_ByteSub": 21.7,
      "AddRoundKey_InversMixColumn": 107.6,
      "aes_main": 15.0
    },
    "McCabe cyclomatic complexity": {
      "encrypt": 10,
      "KeySchedule": 23,
      "AddRoundKey": 12,
      "ByteSub_ShiftRow": 4,
      "MixColumn_AddRoundKey": 4,
      "SubByte": 1,
      "decrypt": 10,
      "InversShiftRow_ByteSub": 4,
      "AddRoundKey_InversMixColumn": 7,
      "aes_main": 1
    },
    "Maximum nesting depth": {
      "encrypt": 3,
      "KeySchedule": 2,
      "AddRoundKey": 3,
      "ByteSub_ShiftRow": 2,
      "MixColumn_AddRoundKey": 1,
      "SubByte": 0,
      "decrypt": 2,
      "InversShiftRow_ByteSub": 2,
      "AddRoundKey_InversMixColumn": 2,
      "aes_main": 0
    },
    "# goto": {
      "encrypt": 0,
      "KeySchedule": 7,
      "AddRoundKey": 2,
      "ByteSub_ShiftRow": 0,
      "MixColumn_AddRoundKey": 0,
      "SubByte": 0,
      "decrypt": 0,
      "InversShiftRow_ByteSub": 0,
      "AddRoundKey_InversMixColumn": 0,
      "aes_main": 0
    },
    "# cast": {
      "encrypt": 0,
      "KeySchedule": 0,
      "AddRoundKey": 0,
      "ByteSub_ShiftRow": 0,
      "MixColumn_AddRoundKey": 0,
      "SubByte": 0,
      "decrypt": 0,
      "InversShiftRow_ByteSub": 0,
      "AddRoundKey_InversMixColumn": 0,
      "aes_main": 0
    },
    "# var": {
      "encrypt": 8,
      "KeySchedule": 25,
      "AddRoundKey": 12,
      "ByteSub_ShiftRow": 290,
      "MixColumn_AddRoundKey": 54,
      "SubByte": 3,
      "decrypt": 8,
      "InversShiftRow_ByteSub": 290,
      "AddRoundKey_InversMixColumn": 54,
      "aes_main": 1
    },
    "# dead code": {
      "program": "Timeout",
      "encrypt": 0,
      "KeySchedule": 0,
      "AddRoundKey": 0,
      "ByteSub_ShiftRow": 0,
      "MixColumn_AddRoundKey": 0,
      "SubByte": 0,
      "decrypt": 0,
      "InversShiftRow_ByteSub": 0,
      "AddRoundKey_InversMixColumn": 0,
      "aes_main": 0
    }
  },
  "atax.c": {
    "Lines of code": {
      "kernel_atax": 77
    },
    "Halstead complexity difficulty measure": {
      "kernel_atax": 36.6
    },
    "McCabe cyclomatic complexity": {
      "kernel_atax": 10
    },
    "Maximum nesting depth": {
      "kernel_atax": 4
    },
    "# goto": {
      "kernel_atax": 5
    },
    "# cast": {
      "kernel_atax": 0
    },
    "# var": {
      "kernel_atax": 25
    },
    "# dead code": {
      "program": 0,
      "kernel_atax": 0
    }
  },
  "bf.c": {
    "Lines of code": {
      "local_memcpy": 23,
      "BF_set_key": 100,
      "BF_encrypt": 181,
      "BF_cfb64_encrypt": 208
    },
    "Halstead complexity difficulty measure": {
      "local_memcpy": 28.7,
      "BF_set_key": 49.6,
      "BF_encrypt": 36.1,
      "BF_cfb64_encrypt": 77.0
    },
    "McCabe cyclomatic complexity": {
      "local_memcpy": 3,
      "BF_set_key": 12,
      "BF_encrypt": 2,
      "BF_cfb64_encrypt": 10
    },
    "Maximum nesting depth": {
      "local_memcpy": 1,
      "BF_set_key": 2,
      "BF_encrypt": 1,
      "BF_cfb64_encrypt": 3
    },
    "# goto": {
      "local_memcpy": 0,
      "BF_set_key": 0,
      "BF_encrypt": 0,
      "BF_cfb64_encrypt": 0
    },
    "# cast": {
      "local_memcpy": 0,
      "BF_set_key": 8,
      "BF_encrypt": 0,
      "BF_cfb64_encrypt": 102
    },
    "# var": {
      "local_memcpy": 6,
      "BF_set_key": 29,
      "BF_encrypt": 170,
      "BF_cfb64_encrypt": 48
    },
    "# dead code": {
      "program": 0,
      "local_memcpy": 0,
      "BF_set_key": 0,
      "BF_encrypt": 0,
      "BF_cfb64_encrypt": 0
    }
  },
  "bicg.c": {
    "Lines of code": {
      "kernel_bicg": 106
    },
    "Halstead complexity difficulty measure": {
      "kernel_bicg": 58.0
    },
    "McCabe cyclomatic complexity": {
      "kernel_bicg": 9
    },
    "Maximum nesting depth": {
      "kernel_bicg": 3
    },
    "# goto": {
      "kernel_bicg": 0
    },
    "# cast": {
      "kernel_bicg": 0
    },
    "# var": {
      "kernel_bicg": 22
    },
    "# dead code": {
      "program": 0,
      "kernel_bicg": 0
    }
  },
  "cholesky.c": {
    "Lines of code": {
      "kernel_cholesky": 245
    },
    "Halstead complexity difficulty measure": {
      "kernel_cholesky": 107.9
    },
    "McCabe cyclomatic complexity": {
      "kernel_cholesky": 17
    },
    "Maximum nesting depth": {
      "kernel_cholesky": 5
    },
    "# goto": {
      "kernel_cholesky": 0
    },
    "# cast": {
      "kernel_cholesky": 0
    },
    "# var": {
      "kernel_cholesky": 32
    },
    "# dead code": {
      "program": 0,
      "kernel_cholesky": 0
    }
  },
  "correlation.c": {
    "Lines of code": {
      "kernel_correlation": 380
    },
    "Halstead complexity difficulty measure": {
      "kernel_correlation": 83.5
    },
    "McCabe cyclomatic complexity": {
      "kernel_correlation": 34
    },
    "Maximum nesting depth": {
      "kernel_correlation": 6
    },
    "# goto": {
      "kernel_correlation": 0
    },
    "# cast": {
      "kernel_correlation": 0
    },
    "# var": {
      "kernel_correlation": 68
    },
    "# dead code": {
      "program": 0,
      "kernel_correlation": 0
    }
  },
  "covariance.c": {
    "Lines of code": {
      "kernel_covariance": 247
    },
    "Halstead complexity difficulty measure": {
      "kernel_covariance": 79.0
    },
    "McCabe cyclomatic complexity": {
      "kernel_covariance": 25
    },
    "Maximum nesting depth": {
      "kernel_covariance": 4
    },
    "# goto": {
      "kernel_covariance": 0
    },
    "# cast": {
      "kernel_covariance": 0
    },
    "# var": {
      "kernel_covariance": 40
    },
    "# dead code": {
      "program": 0,
      "kernel_covariance": 0
    }
  },
  "deriche.c": {
    "Lines of code": {
      "kernel_deriche": 671
    },
    "Halstead complexity difficulty measure": {
      "kernel_deriche": 77.7
    },
    "McCabe cyclomatic complexity": {
      "kernel_deriche": 34
    },
    "Maximum nesting depth": {
      "kernel_deriche": 4
    },
    "# goto": {
      "kernel_deriche": 0
    },
    "# cast": {
      "kernel_deriche": 0
    },
    "# var": {
      "kernel_deriche": 180
    },
    "# dead code": {
      "program": "Timeout",
      "kernel_deriche": "Timeout"
    }
  },
  "dfadd.c": {
    "Lines of code": {
      "shift64RightJamming": 15,
      "float_raise": 4,
      "float64_is_nan": 4,
      "float64_is_signaling_nan": 7,
      "extractFloat64Frac": 3,
      "extractFloat64Exp": 3,
      "extractFloat64Sign": 3,
      "packFloat64": 3,
      "roundAndPackFloat64": 53,
      "normalizeRoundAndPackFloat64": 4,
      "countLeadingZeros64": 4,
      "countLeadingZeros32": 7,
      "addFloat64Sigs": 66,
      "propagateFloat64NaN": 19,
      "subFloat64Sigs": 79,
      "float64_add": 11,
      "ullong_to_double": 4
    },
    "Halstead complexity difficulty measure": {
      "shift64RightJamming": 23.4,
      "float_raise": 8.9,
      "float64_is_nan": 5.2,
      "float64_is_signaling_nan": 9.0,
      "extractFloat64Frac": 5.6,
      "extractFloat64Exp": 5.1,
      "extractFloat64Sign": 4.1,
      "packFloat64": 8.9,
      "roundAndPackFloat64": 27.8,
      "normalizeRoundAndPackFloat64": 9.7,
      "countLeadingZeros64": 9.2,
      "countLeadingZeros32": 15.6,
      "addFloat64Sigs": 31.2,
      "propagateFloat64NaN": 14.3,
      "subFloat64Sigs": 29.2,
      "float64_add": 12.3,
      "ullong_to_double": 5.5
    },
    "McCabe cyclomatic complexity": {
      "shift64RightJamming": 3,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 2,
      "extractFloat64Frac": 1,
      "extractFloat64Exp": 1,
      "extractFloat64Sign": 1,
      "packFloat64": 1,
      "roundAndPackFloat64": 11,
      "normalizeRoundAndPackFloat64": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 1,
      "addFloat64Sigs": 10,
      "propagateFloat64NaN": 4,
      "subFloat64Sigs": 11,
      "float64_add": 2,
      "ullong_to_double": 1
    },
    "Maximum nesting depth": {
      "shift64RightJamming": 1,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 3,
      "normalizeRoundAndPackFloat64": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "addFloat64Sigs": 4,
      "propagateFloat64NaN": 1,
      "subFloat64Sigs": 4,
      "float64_add": 1,
      "ullong_to_double": 0
    },
    "# goto": {
      "shift64RightJamming": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 4,
      "normalizeRoundAndPackFloat64": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "addFloat64Sigs": 2,
      "propagateFloat64NaN": 0,
      "subFloat64Sigs": 5,
      "float64_add": 0,
      "ullong_to_double": 0
    },
    "# cast": {
      "shift64RightJamming": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "normalizeRoundAndPackFloat64": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "addFloat64Sigs": 0,
      "propagateFloat64NaN": 0,
      "subFloat64Sigs": 0,
      "float64_add": 0,
      "ullong_to_double": 0
    },
    "# var": {
      "shift64RightJamming": 2,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 6,
      "normalizeRoundAndPackFloat64": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 4,
      "addFloat64Sigs": 17,
      "propagateFloat64NaN": 6,
      "subFloat64Sigs": 18,
      "float64_add": 3,
      "ullong_to_double": 1
    },
    "# dead code": {
      "program": 0,
      "shift64RightJamming": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "normalizeRoundAndPackFloat64": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "addFloat64Sigs": 0,
      "propagateFloat64NaN": 0,
      "subFloat64Sigs": 0,
      "float64_add": 0,
      "ullong_to_double": 0
    }
  },
  "dfdiv.c": {
    "Lines of code": {
        "shift64RightJamming": 15,
        "add128": 5,
        "sub128": 4,
        "mul64To128": 12,
        "float_raise": 4,
        "float64_is_nan": 4,
        "float64_is_signaling_nan": 7,
        "extractFloat64Frac": 3,
        "extractFloat64Exp": 3,
        "extractFloat64Sign": 3,
        "normalizeFloat64Subnormal": 5,
        "countLeadingZeros64": 4,
        "countLeadingZeros32": 7,
        "packFloat64": 3,
        "roundAndPackFloat64": 53,
        "float64_div": 98,
        "propagateFloat64NaN": 19,
        "estimateDiv128To64": 42,
        "ullong_to_double": 4
    },
    "Halstead complexity difficulty measure": {
      "shift64RightJamming": 23.4,
      "add128": 14.2,
      "sub128": 14.9,
      "mul64To128": 18.7,
      "float_raise": 8.9,
      "float64_is_nan": 5.2,
      "float64_is_signaling_nan": 9.0,
      "extractFloat64Frac": 5.6,
      "extractFloat64Exp": 5.1,
      "extractFloat64Sign": 4.1,
      "normalizeFloat64Subnormal": 11.0,
      "countLeadingZeros64": 9.2,
      "countLeadingZeros32": 15.6,
      "packFloat64": 8.9,
      "roundAndPackFloat64": 27.8,
      "float64_div": 36.3,
      "propagateFloat64NaN": 14.3,
      "estimateDiv128To64": 29.7,
      "ullong_to_double": 5.5
    },
    "McCabe cyclomatic complexity": {
      "shift64RightJamming": 3,
      "add128": 1,
      "sub128": 1,
      "mul64To128": 1,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 2,
      "extractFloat64Frac": 1,
      "extractFloat64Exp": 1,
      "extractFloat64Sign": 1,
      "normalizeFloat64Subnormal": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 1,
      "packFloat64": 1,
      "roundAndPackFloat64": 11,
      "float64_div": 16,
      "propagateFloat64NaN": 4,
      "estimateDiv128To64": 6,
      "ullong_to_double": 1
    },
    "Maximum nesting depth": {
      "shift64RightJamming": 1,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 3,
      "float64_div": 3,
      "propagateFloat64NaN": 1,
      "estimateDiv128To64": 2,
      "ullong_to_double": 0
    },
    "# goto": {
      "shift64RightJamming": 0,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 4,
      "float64_div": 0,
      "propagateFloat64NaN": 0,
      "estimateDiv128To64": 0,
      "ullong_to_double": 0
    },
    "# cast": {
      "shift64RightJamming": 0,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "float64_div": 0,
      "propagateFloat64NaN": 0,
      "estimateDiv128To64": 0,
      "ullong_to_double": 0
    },
    "# var": {
      "shift64RightJamming": 2,
      "add128": 1,
      "sub128": 0,
      "mul64To128": 8,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 4,
      "packFloat64": 0,
      "roundAndPackFloat64": 6,
      "float64_div": 28,
      "propagateFloat64NaN": 6,
      "estimateDiv128To64": 14,
      "ullong_to_double": 1
    },
    "# dead code": {
      "program": 0,
      "shift64RightJamming": 0,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "float64_div": 0,
      "propagateFloat64NaN": 0,
      "estimateDiv128To64": 0,
      "ullong_to_double": 0
    }
  },
  "dfmul.c": {
    "Lines of code": {
      "shift64RightJamming": 15,
      "mul64To128": 12,
      "float_raise": 4,
      "float64_is_nan": 4,
      "float64_is_signaling_nan": 7,
      "extractFloat64Frac": 3,
      "extractFloat64Exp": 3,
      "extractFloat64Sign": 3,
      "normalizeFloat64Subnormal": 5,
      "countLeadingZeros64": 4,
      "countLeadingZeros32": 7,
      "packFloat64": 3,
      "roundAndPackFloat64": 53,
      "float64_mul": 75,
      "propagateFloat64NaN": 19,
      "ullong_to_double": 4
    },
    "Halstead complexity difficulty measure": {
      "shift64RightJamming": 23.4,
      "mul64To128": 18.7,
      "float_raise": 8.9,
      "float64_is_nan": 5.2,
      "float64_is_signaling_nan": 9.0,
      "extractFloat64Frac": 5.6,
      "extractFloat64Exp": 5.1,
      "extractFloat64Sign": 4.1,
      "normalizeFloat64Subnormal": 11.0,
      "countLeadingZeros64": 9.2,
      "countLeadingZeros32": 15.6,
      "packFloat64": 8.9,
      "roundAndPackFloat64": 27.8,
      "float64_mul": 28.8,
      "propagateFloat64NaN": 14.3,
      "ullong_to_double": 5.5
    },
    "McCabe cyclomatic complexity": {
      "shift64RightJamming": 3,
      "mul64To128": 1,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 2,
      "extractFloat64Frac": 1,
      "extractFloat64Exp": 1,
      "extractFloat64Sign": 1,
      "normalizeFloat64Subnormal": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 1,
      "packFloat64": 1,
      "roundAndPackFloat64": 11,
      "float64_mul": 13,
      "propagateFloat64NaN": 4,
      "ullong_to_double": 1
    },
    "Maximum nesting depth": {
      "shift64RightJamming": 1,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 3,
      "float64_mul": 2,
      "propagateFloat64NaN": 1,
      "ullong_to_double": 0
    },
    "# goto": {
      "shift64RightJamming": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 4,
      "float64_mul": 0,
      "propagateFloat64NaN": 0,
      "ullong_to_double": 0
    },
    "# cast": {
      "shift64RightJamming": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "float64_mul": 0,
      "propagateFloat64NaN": 0,
      "ullong_to_double": 0
    },
    "# var": {
      "shift64RightJamming": 2,
      "mul64To128": 8,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 4,
      "packFloat64": 0,
      "roundAndPackFloat64": 6,
      "float64_mul": 22,
      "propagateFloat64NaN": 6,
      "ullong_to_double": 1
    },
    "# dead code": {
      "program": 0,
      "shift64RightJamming": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "float64_mul": 0,
      "propagateFloat64NaN": 0,
      "ullong_to_double": 0
    }
  },
  "dfsin.c": {
    "Lines of code": {
      "shift64RightJamming": 15,
      "shift64ExtraRightJamming": 20,
      "add128": 5,
      "sub128": 4,
      "mul64To128": 12,
      "float_raise": 4,
      "float64_is_nan": 4,
      "float64_is_signaling_nan": 7,
      "extractFloat64Frac": 3,
      "extractFloat64Exp": 3,
      "extractFloat64Sign": 3,
      "normalizeFloat64Subnormal": 5,
      "countLeadingZeros64": 4,
      "countLeadingZeros32": 7,
      "packFloat64": 3,
      "roundAndPackFloat64": 53,
      "normalizeRoundAndPackFloat64": 4,
      "int32_to_float64": 10,
      "addFloat64Sigs": 66,
      "propagateFloat64NaN": 19,
      "subFloat64Sigs": 79,
      "float64_add": 11,
      "float64_mul": 75,
      "float64_div": 98,
      "estimateDiv128To64": 42,
      "float64_le": 29,
      "float64_ge": 3,
      "float64_neg": 3,
      "local_sin": 20,
      "ullong_to_double": 4
    },
    "Halstead complexity difficulty measure": {
      "shift64RightJamming": 23.4,
      "shift64ExtraRightJamming": 29.0,
      "add128": 14.2,
      "sub128": 14.9,
      "mul64To128": 18.7,
      "float_raise": 8.9,
      "float64_is_nan": 5.2,
      "float64_is_signaling_nan": 9.0,
      "extractFloat64Frac": 5.6,
      "extractFloat64Exp": 5.1,
      "extractFloat64Sign": 4.1,
      "normalizeFloat64Subnormal": 11.0,
      "countLeadingZeros64": 9.2,
      "countLeadingZeros32": 15.6,
      "packFloat64": 8.9,
      "roundAndPackFloat64": 27.8,
      "normalizeRoundAndPackFloat64": 9.7,
      "int32_to_float64": 16.3,
      "addFloat64Sigs": 31.2,
      "propagateFloat64NaN": 14.3,
      "subFloat64Sigs": 29.2,
      "float64_add": 12.3,
      "float64_mul": 28.8,
      "float64_div": 36.3,
      "estimateDiv128To64": 29.7,
      "float64_le": 18.2,
      "float64_ge": 5.7,
      "float64_neg": 5.3,
      "local_sin": 18.2,
      "ullong_to_double": 5.5
    },
    "McCabe cyclomatic complexity": {
      "shift64RightJamming": 3,
      "shift64ExtraRightJamming": 4,
      "add128": 1,
      "sub128": 1,
      "mul64To128": 1,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 2,
      "extractFloat64Frac": 1,
      "extractFloat64Exp": 1,
      "extractFloat64Sign": 1,
      "normalizeFloat64Subnormal": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 1,
      "packFloat64": 1,
      "roundAndPackFloat64": 11,
      "normalizeRoundAndPackFloat64": 1,
      "int32_to_float64": 2,
      "addFloat64Sigs": 10,
      "propagateFloat64NaN": 4,
      "subFloat64Sigs": 11,
      "float64_add": 2,
      "float64_mul": 13,
      "float64_div": 16,
      "estimateDiv128To64": 6,
      "float64_le": 8,
      "float64_ge": 1,
      "float64_neg": 1,
      "local_sin": 2,
      "ullong_to_double": 1
    },
    "Maximum nesting depth": {
      "shift64RightJamming": 1,
      "shift64ExtraRightJamming": 1,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 3,
      "normalizeRoundAndPackFloat64": 0,
      "int32_to_float64": 1,
      "addFloat64Sigs": 4,
      "propagateFloat64NaN": 1,
      "subFloat64Sigs": 4,
      "float64_add": 1,
      "float64_mul": 2,
      "float64_div": 3,
      "estimateDiv128To64": 2,
      "float64_le": 2,
      "float64_ge": 0,
      "float64_neg": 0,
      "local_sin": 1,
      "ullong_to_double": 0
    },
    "# goto": {
      "shift64RightJamming": 0,
      "shift64ExtraRightJamming": 0,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 4,
      "normalizeRoundAndPackFloat64": 0,
      "int32_to_float64": 0,
      "addFloat64Sigs": 2,
      "propagateFloat64NaN": 0,
      "subFloat64Sigs": 5,
      "float64_add": 0,
      "float64_mul": 0,
      "float64_div": 0,
      "estimateDiv128To64": 0,
      "float64_le": 0,
      "float64_ge": 0,
      "float64_neg": 0,
      "local_sin": 0,
      "ullong_to_double": 0
    },
    "# cast": {
      "shift64RightJamming": 0,
      "shift64ExtraRightJamming": 0,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "normalizeRoundAndPackFloat64": 0,
      "int32_to_float64": 1,
      "addFloat64Sigs": 0,
      "propagateFloat64NaN": 0,
      "subFloat64Sigs": 0,
      "float64_add": 0,
      "float64_mul": 0,
      "float64_div": 0,
      "estimateDiv128To64": 0,
      "float64_le": 0,
      "float64_ge": 0,
      "float64_neg": 0,
      "local_sin": 0,
      "ullong_to_double": 0
    },
    "# var": {
      "shift64RightJamming": 2,
      "shift64ExtraRightJamming": 1,
      "add128": 1,
      "sub128": 0,
      "mul64To128": 8,
      "float_raise": 1,
      "float64_is_nan": 1,
      "float64_is_signaling_nan": 1,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 1,
      "countLeadingZeros64": 1,
      "countLeadingZeros32": 4,
      "packFloat64": 0,
      "roundAndPackFloat64": 6,
      "normalizeRoundAndPackFloat64": 1,
      "int32_to_float64": 4,
      "addFloat64Sigs": 17,
      "propagateFloat64NaN": 6,
      "subFloat64Sigs": 18,
      "float64_add": 3,
      "float64_mul": 22,
      "float64_div": 28,
      "estimateDiv128To64": 14,
      "float64_le": 3,
      "float64_ge": 0,
      "float64_neg": 0,
      "local_sin": 7,
      "ullong_to_double": 1
    },
    "# dead code": {
      "program": 0,
      "shift64RightJamming": 0,
      "shift64ExtraRightJamming": 0,
      "add128": 0,
      "sub128": 0,
      "mul64To128": 0,
      "float_raise": 0,
      "float64_is_nan": 0,
      "float64_is_signaling_nan": 0,
      "extractFloat64Frac": 0,
      "extractFloat64Exp": 0,
      "extractFloat64Sign": 0,
      "normalizeFloat64Subnormal": 0,
      "countLeadingZeros64": 0,
      "countLeadingZeros32": 0,
      "packFloat64": 0,
      "roundAndPackFloat64": 0,
      "normalizeRoundAndPackFloat64": 0,
      "int32_to_float64": 0,
      "addFloat64Sigs": 0,
      "propagateFloat64NaN": 0,
      "subFloat64Sigs": 0,
      "float64_add": 0,
      "float64_mul": 0,
      "float64_div": 0,
      "estimateDiv128To64": 0,
      "float64_le": 0,
      "float64_ge": 0,
      "float64_neg": 0,
      "local_sin": 0,
      "ullong_to_double": 0
    }
  },
  "doitgen.c": {
    "Lines of code": {
      "kernel_doitgen": 92
    },
    "Halstead complexity difficulty measure": {
      "kernel_doitgen": 35.8
    },
    "McCabe cyclomatic complexity": {
      "kernel_doitgen": 12
    },
    "Maximum nesting depth": {
      "kernel_doitgen": 6
    },
    "# goto": {
      "kernel_doitgen": 6
    },
    "# cast": {
      "kernel_doitgen": 0
    },
    "# var": {
      "kernel_doitgen": 29
    },
    "# dead code": {
      "program": 1,
      "kernel_doitgen": 1
    }
  },
  "durbin.c": {
    "Lines of code": {
      "kernel_durbin": 73
    },
    "Halstead complexity difficulty measure": {
      "kernel_durbin": 35.7
    },
    "McCabe cyclomatic complexity": {
      "kernel_durbin": 8
    },
    "Maximum nesting depth": {
      "kernel_durbin": 3
    },
    "# goto": {
      "kernel_durbin": 5
    },
    "# cast": {
      "kernel_durbin": 0
    },
    "# var": {
      "kernel_durbin": 26
    },
    "# dead code": {
      "program": 0,
      "kernel_durbin": 0
    }
  },
  "fdtd-2d.c": {
    "Lines of code": {
      "kernel_fdtd_2d": 412
    },
    "Halstead complexity difficulty measure": {
      "kernel_fdtd_2d": 136.3
    },
    "McCabe cyclomatic complexity": {
      "kernel_fdtd_2d": 43
    },
    "Maximum nesting depth": {
      "kernel_fdtd_2d": 5
    },
    "# goto": {
      "kernel_fdtd_2d": 0
    },
    "# cast": {
      "kernel_fdtd_2d": 0
    },
    "# var": {
      "kernel_fdtd_2d": 47
    },
    "# dead code": {
      "program": "Timeout",
      "kernel_fdtd_2d": "Timeout"
    }
  },
  "floyd-warshall.c": {
    "Lines of code": {
      "kernel_floyd_warshall": 94
    },
    "Halstead complexity difficulty measure": {
      "kernel_floyd_warshall": 95.2
    },
    "McCabe cyclomatic complexity": {
      "kernel_floyd_warshall": 9
    },
    "Maximum nesting depth": {
      "kernel_floyd_warshall": 3
    },
    "# goto": {
      "kernel_floyd_warshall": 0
    },
    "# cast": {
      "kernel_floyd_warshall": 0
    },
    "# var": {
      "kernel_floyd_warshall": 10
    },
    "# dead code": {
      "program": 0,
      "kernel_floyd_warshall": 0
    }
  },
  "gemm.c": {
    "Lines of code": {
      "kernel_gemm": 143
    },
    "Halstead complexity difficulty measure": {
      "kernel_gemm": 86.2
    },
    "McCabe cyclomatic complexity": {
      "kernel_gemm": 19
    },
    "Maximum nesting depth": {
      "kernel_gemm": 5
    },
    "# goto": {
      "kernel_gemm": 0
    },
    "# cast": {
      "kernel_gemm": 0
    },
    "# var": {
      "kernel_gemm": 19
    },
    "# dead code": {
      "program": 0,
      "kernel_gemm": 0
    }
  },
  "gemver.c": {
    "Lines of code": {
      "kernel_gemver": 157
    },
    "Halstead complexity difficulty measure": {
      "kernel_gemver": 63.2
    },
    "McCabe cyclomatic complexity": {
      "kernel_gemver": 12
    },
    "Maximum nesting depth": {
      "kernel_gemver": 2
    },
    "# goto": {
      "kernel_gemver": 0
    },
    "# cast": {
      "kernel_gemver": 0
    },
    "# var": {
      "kernel_gemver": 36
    },
    "# dead code": {
      "program": 0,
      "kernel_gemver": 0
    }
  },
  "gesummv.c": {
    "Lines of code": {
      "kernel_gesummv": 76
    },
    "Halstead complexity difficulty measure": {
      "kernel_gesummv": 53.2
    },
    "McCabe cyclomatic complexity": {
      "kernel_gesummv": 5
    },
    "Maximum nesting depth": {
      "kernel_gesummv": 2
    },
    "# goto": {
      "kernel_gesummv": 0
    },
    "# cast": {
      "kernel_gesummv": 0
    },
    "# var": {
      "kernel_gesummv": 20
    },
    "# dead code": {
      "program": 0,
      "kernel_gesummv": 0
    }
  },
  "gramschmidt.c": {
    "Lines of code": {
      "kernel_gramschmidt": 127
    },
    "Halstead complexity difficulty measure": {
      "kernel_gramschmidt": 38.9
    },
    "McCabe cyclomatic complexity": {
      "kernel_gramschmidt": 15
    },
    "Maximum nesting depth": {
      "kernel_gramschmidt": 6
    },
    "# goto": {
      "kernel_gramschmidt": 6
    },
    "# cast": {
      "kernel_gramschmidt": 0
    },
    "# var": {
      "kernel_gramschmidt": 46
    },
    "# dead code": {
      "program": 1,
      "kernel_gramschmidt": 1
    }
  },
  "gsm.c": {
    "Lines of code": {
      "gsm_add": 11,
      "gsm_mult": 9,
      "gsm_mult_r": 10,
      "gsm_norm": 28,
      "gsm_div": 19,
      "Autocorrelation": 163,
      "Reflection_coefficients": 93,
      "Transformation_to_Log_Area_Ratios": 29,
      "Quantization_and_coding": 59,
      "Gsm_LPC_Analysis": 7
    },
    "Halstead complexity difficulty measure": {
      "gsm_add": 12.7,
      "gsm_mult": 12.9,
      "gsm_mult_r": 12.4,
      "gsm_norm": 19.8,
      "gsm_div": 28.1,
      "Autocorrelation": 62.4,
      "Reflection_coefficients": 48.0,
      "Transformation_to_Log_Area_Ratios": 29.1,
      "Quantization_and_coding": 19.3,
      "Gsm_LPC_Analysis": 8.9
    },
    "McCabe cyclomatic complexity": {
      "gsm_add": 3,
      "gsm_mult": 3,
      "gsm_mult_r": 3,
      "gsm_norm": 6,
      "gsm_div": 3,
      "Autocorrelation": 10,
      "Reflection_coefficients": 12,
      "Transformation_to_Log_Area_Ratios": 4,
      "Quantization_and_coding": 9,
      "Gsm_LPC_Analysis": 1
    },
    "Maximum nesting depth": {
      "gsm_add": 1,
      "gsm_mult": 2,
      "gsm_mult_r": 2,
      "gsm_norm": 2,
      "gsm_div": 1,
      "Autocorrelation": 0,
      "Reflection_coefficients": 2,
      "Transformation_to_Log_Area_Ratios": 2,
      "Quantization_and_coding": 1,
      "Gsm_LPC_Analysis": 0
    },
    "# goto": {
      "gsm_add": 0,
      "gsm_mult": 0,
      "gsm_mult_r": 0,
      "gsm_norm": 0,
      "gsm_div": 0,
      "Autocorrelation": 0,
      "Reflection_coefficients": 0,
      "Transformation_to_Log_Area_Ratios": 0,
      "Quantization_and_coding": 0,
      "Gsm_LPC_Analysis": 0
    },
    "# cast": {
      "gsm_add": 0,
      "gsm_mult": 0,
      "gsm_mult_r": 0,
      "gsm_norm": 4,
      "gsm_div": 0,
      "Autocorrelation": 0,
      "Reflection_coefficients": 0,
      "Transformation_to_Log_Area_Ratios": 0,
      "Quantization_and_coding": 0,
      "Gsm_LPC_Analysis": 0
    },
    "# var": {
      "gsm_add": 2,
      "gsm_mult": 1,
      "gsm_mult_r": 2,
      "gsm_norm": 6,
      "gsm_div": 5,
      "Autocorrelation": 61,
      "Reflection_coefficients": 33,
      "Transformation_to_Log_Area_Ratios": 6,
      "Quantization_and_coding": 25,
      "Gsm_LPC_Analysis": 1
    },
    "# dead code": {
      "program": 0,
      "gsm_add": 0,
      "gsm_mult": 0,
      "gsm_mult_r": 0,
      "gsm_norm": 0,
      "gsm_div": 0,
      "Autocorrelation": 0,
      "Reflection_coefficients": 0,
      "Transformation_to_Log_Area_Ratios": 0,
      "Quantization_and_coding": 0,
      "Gsm_LPC_Analysis": 0
    }
  },
  "heat-3d.c": {
    "Lines of code": {
      "kernel_heat_3d": 215
    },
    "Halstead complexity difficulty measure": {
      "kernel_heat_3d": 56.5
    },
    "McCabe cyclomatic complexity": {
      "kernel_heat_3d": 12
    },
    "Maximum nesting depth": {
      "kernel_heat_3d": 5
    },
    "# goto": {
      "kernel_heat_3d": 10
    },
    "# cast": {
      "kernel_heat_3d": 0
    },
    "# var": {
      "kernel_heat_3d": 91
    },
    "# dead code": {
      "program": 2,
      "kernel_heat_3d": 2
    }
  },
  "jacobi-1d.c": {
    "Lines of code": {
      "kernel_jacobi_1d": 49
    },
    "Halstead complexity difficulty measure": {
      "kernel_jacobi_1d": 29.5
    },
    "McCabe cyclomatic complexity": {
      "kernel_jacobi_1d": 8
    },
    "Maximum nesting depth": {
      "kernel_jacobi_1d": 4
    },
    "# goto": {
      "kernel_jacobi_1d": 5
    },
    "# cast": {
      "kernel_jacobi_1d": 0
    },
    "# var": {
      "kernel_jacobi_1d": 15
    },
    "# dead code": {
      "program": 0,
      "kernel_jacobi_1d": 0
    }
  },
  "jacobi-2d.c": {
    "Lines of code": {
      "kernel_jacobi_2d": 95
    },
    "Halstead complexity difficulty measure": {
      "kernel_jacobi_2d": 37.8
    },
    "McCabe cyclomatic complexity": {
      "kernel_jacobi_2d": 10
    },
    "Maximum nesting depth": {
      "kernel_jacobi_2d": 4
    },
    "# goto": {
      "kernel_jacobi_2d": 8
    },
    "# cast": {
      "kernel_jacobi_2d": 0
    },
    "# var": {
      "kernel_jacobi_2d": 42
    },
    "# dead code": {
      "program": 0,
      "kernel_jacobi_2d": 0
    }
  },
  "lu.c": {
    "Lines of code": {
      "kernel_lu": 232
    },
    "Halstead complexity difficulty measure": {
      "kernel_lu": 114.4
    },
    "McCabe cyclomatic complexity": {
      "kernel_lu": 25
    },
    "Maximum nesting depth": {
      "kernel_lu": 5
    },
    "# goto": {
      "kernel_lu": 0
    },
    "# cast": {
      "kernel_lu": 0
    },
    "# var": {
      "kernel_lu": 26
    },
    "# dead code": {
      "program": 0,
      "kernel_lu": 0
    }
  },
  "ludcmp.c": {
    "Lines of code": {
      "kernel_ludcmp": 400
    },
    "Halstead complexity difficulty measure": {
      "kernel_ludcmp": 108.1
    },
    "McCabe cyclomatic complexity": {
      "kernel_ludcmp": 36
    },
    "Maximum nesting depth": {
      "kernel_ludcmp": 6
    },
    "# goto": {
      "kernel_ludcmp": 0
    },
    "# cast": {
      "kernel_ludcmp": 0
    },
    "# var": {
      "kernel_ludcmp": 61
    },
    "# dead code": {
      "program": 0,
      "kernel_ludcmp": 0
    }
  },
  "mpeg2.c": {
    "Lines of code": {
      "read": 20,
      "Fill_Buffer": 7,
      "Show_Bits": 3,
      "Get_Bits1": 3,
      "Get_Bits": 5,
      "Flush_Buffer": 50,
      "Get_motion_code": 39,
      "Get_dmvector": 7,
      "motion_vectors": 29,
      "motion_vector": 27,
      "decode_motion_vector": 27
    },
    "Halstead complexity difficulty measure": {
      "read": 27.2,
      "Fill_Buffer": 11.1,
      "Show_Bits": 6.7,
      "Get_Bits1": 4.0,
      "Get_Bits": 6.9,
      "Flush_Buffer": 39.1,
      "Get_motion_code": 27.4,
      "Get_dmvector": 10.9,
      "motion_vectors": 34.0,
      "motion_vector": 21.9,
      "decode_motion_vector": 28.5
    },
    "McCabe cyclomatic complexity": {
      "read": 3,
      "Fill_Buffer": 2,
      "Show_Bits": 1,
      "Get_Bits1": 1,
      "Get_Bits": 1,
      "Flush_Buffer": 7,
      "Get_motion_code": 8,
      "Get_dmvector": 2,
      "motion_vectors": 3,
      "motion_vector": 6,
      "decode_motion_vector": 5
    },
    "Maximum nesting depth": {
      "read": 1,
      "Fill_Buffer": 1,
      "Show_Bits": 0,
      "Get_Bits1": 0,
      "Get_Bits": 0,
      "Flush_Buffer": 2,
      "Get_motion_code": 2,
      "Get_dmvector": 1,
      "motion_vectors": 1,
      "motion_vector": 1,
      "decode_motion_vector": 2
    },
    "# goto": {
      "read": 0,
      "Fill_Buffer": 0,
      "Show_Bits": 0,
      "Get_Bits1": 0,
      "Get_Bits": 0,
      "Flush_Buffer": 0,
      "Get_motion_code": 0,
      "Get_dmvector": 0,
      "motion_vectors": 0,
      "motion_vector": 0,
      "decode_motion_vector": 0
    },
    "# cast": {
      "read": 4,
      "Fill_Buffer": 0,
      "Show_Bits": 0,
      "Get_Bits1": 0,
      "Get_Bits": 0,
      "Flush_Buffer": 4,
      "Get_motion_code": 9,
      "Get_dmvector": 0,
      "motion_vectors": 0,
      "motion_vector": 0,
      "decode_motion_vector": 0
    },
    "# var": {
      "read": 4,
      "Fill_Buffer": 1,
      "Show_Bits": 0,
      "Get_Bits1": 0,
      "Get_Bits": 1,
      "Flush_Buffer": 10,
      "Get_motion_code": 6,
      "Get_dmvector": 1,
      "motion_vectors": 10,
      "motion_vector": 5,
      "decode_motion_vector": 8
    },
    "# dead code": {
      "program": 0,
      "read": 0,
      "Fill_Buffer": 0,
      "Show_Bits": 0,
      "Get_Bits1": 0,
      "Get_Bits": 0,
      "Flush_Buffer": 0,
      "Get_motion_code": 0,
      "Get_dmvector": 0,
      "motion_vectors": 0,
      "motion_vector": 0,
      "decode_motion_vector": 0
    }
  },
  "mvt.c": {
    "Lines of code": {
      "kernel_mvt": 86
    },
    "Halstead complexity difficulty measure": {
      "kernel_mvt": 56.6
    },
    "McCabe cyclomatic complexity": {
      "kernel_mvt": 8
    },
    "Maximum nesting depth": {
      "kernel_mvt": 2
    },
    "# goto": {
      "kernel_mvt": 0
    },
    "# cast": {
      "kernel_mvt": 0
    },
    "# var": {
      "kernel_mvt": 17
    },
    "# dead code": {
      "program": 0,
      "kernel_mvt": 0
    }
  },
  "nussinov.c": {
    "Lines of code": {
      "kernel_nussinov": 329
    },
    "Halstead complexity difficulty measure": {
      "kernel_nussinov": 121.2
    },
    "McCabe cyclomatic complexity": {
      "kernel_nussinov": 27
    },
    "Maximum nesting depth": {
      "kernel_nussinov": 5
    },
    "# goto": {
      "kernel_nussinov": 0
    },
    "# cast": {
      "kernel_nussinov": 6
    },
    "# var": {
      "kernel_nussinov": 50
    },
    "# dead code": {
      "program": "Timeout",
      "kernel_nussinov": "Timeout"
    }
  },
  "seidel-2d.c": {
    "Lines of code": {
      "kernel_seidel_2d": 197
    },
    "Halstead complexity difficulty measure": {
      "kernel_seidel_2d": 114.8
    },
    "McCabe cyclomatic complexity": {
      "kernel_seidel_2d": 10
    },
    "Maximum nesting depth": {
      "kernel_seidel_2d": 4
    },
    "# goto": {
      "kernel_seidel_2d": 0
    },
    "# cast": {
      "kernel_seidel_2d": 0
    },
    "# var": {
      "kernel_seidel_2d": 24
    },
    "# dead code": {
      "program": 0,
      "kernel_seidel_2d": 0
    }
  },
  "sha_driver.c": {
    "Lines of code": {
      "local_memset": 26
    },
    "Halstead complexity difficulty measure": {
      "local_memset": 29.3
    },
    "McCabe cyclomatic complexity": {
      "local_memset": 5
    },
    "Maximum nesting depth": {
      "local_memset": 2
    },
    "# goto": {
      "local_memset": 0
    },
    "# cast": {
      "local_memset": 0
    },
    "# var": {
      "local_memset": 7
    },
    "# dead code": {
      "program": 0,
      "local_memset": 0
    }
  },
  "symm.c": {
    "Lines of code": {
      "kernel_symm": 224
    },
    "Halstead complexity difficulty measure": {
      "kernel_symm": 100.3
    },
    "McCabe cyclomatic complexity": {
      "kernel_symm": 15
    },
    "Maximum nesting depth": {
      "kernel_symm": 5
    },
    "# goto": {
      "kernel_symm": 0
    },
    "# cast": {
      "kernel_symm": 0
    },
    "# var": {
      "kernel_symm": 33
    },
    "# dead code": {
      "program": 0,
      "kernel_symm": 0
    }
  },
  "syr2k.c": {
    "Lines of code": {
      "kernel_syr2k": 152
    },
    "Halstead complexity difficulty measure": {
      "kernel_syr2k": 90.6
    },
    "McCabe cyclomatic complexity": {
      "kernel_syr2k": 13
    },
    "Maximum nesting depth": {
      "kernel_syr2k": 4
    },
    "# goto": {
      "kernel_syr2k": 0
    },
    "# cast": {
      "kernel_syr2k": 0
    },
    "# var": {
      "kernel_syr2k": 22
    },
    "# dead code": {
      "program": 0,
      "kernel_syr2k": 0
    }
  },
  "syrk.c": {
    "Lines of code": {
      "kernel_syrk": 120
    },
    "Halstead complexity difficulty measure": {
      "kernel_syrk": 79.4
    },
    "McCabe cyclomatic complexity": {
      "kernel_syrk": 13
    },
    "Maximum nesting depth": {
      "kernel_syrk": 4
    },
    "# goto": {
      "kernel_syrk": 0
    },
    "# cast": {
      "kernel_syrk": 0
    },
    "# var": {
      "kernel_syrk": 18
    },
    "# dead code": {
      "program": 0,
      "kernel_syrk": 0
    }
  },
  "trisolv.c": {
    "Lines of code": {
      "kernel_trisolv": 79
    },
    "Halstead complexity difficulty measure": {
      "kernel_trisolv": 49.3
    },
    "McCabe cyclomatic complexity": {
      "kernel_trisolv": 7
    },
    "Maximum nesting depth": {
      "kernel_trisolv": 3
    },
    "# goto": {
      "kernel_trisolv": 0
    },
    "# cast": {
      "kernel_trisolv": 0
    },
    "# var": {
      "kernel_trisolv": 15
    },
    "# dead code": {
      "program": 0,
      "kernel_trisolv": 0
    }
  },
  "trmm.c": {
    "Lines of code": {
      "kernel_trmm": 116
    },
    "Halstead complexity difficulty measure": {
      "kernel_trmm": 79.5
    },
    "McCabe cyclomatic complexity": {
      "kernel_trmm": 15
    },
    "Maximum nesting depth": {
      "kernel_trmm": 5
    },
    "# goto": {
      "kernel_trmm": 0
    },
    "# cast": {
      "kernel_trmm": 0
    },
    "# var": {
      "kernel_trmm": 16
    },
    "# dead code": {
      "program": 0,
      "kernel_trmm": 0
    }
  }
}
